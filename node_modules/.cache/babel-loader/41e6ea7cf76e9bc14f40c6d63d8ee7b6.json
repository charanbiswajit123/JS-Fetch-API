{"ast":null,"code":"import _defineProperty from \"/home/teknotrait/Desktop/Biswajit/Online-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/teknotrait/Desktop/Biswajit/Online-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes';\n\nvar products = function products(state, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return _objectSpread({}, state, {\n        inventory: state.inventory - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar byId = function byId() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return _objectSpread({}, state, action.products.reduce(function (obj, product) {\n        obj[product.id] = product;\n        return obj;\n      }, {}));\n\n    default:\n      var productId = action.productId;\n\n      if (productId) {\n        return _objectSpread({}, state, _defineProperty({}, productId, products(state[productId], action)));\n      }\n\n      return state;\n  }\n};\n\nvar visibleIds = function visibleIds() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(function (product) {\n        return product.id;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  byId: byId,\n  visibleIds: visibleIds\n});\nexport var getProduct = function getProduct(state, id) {\n  return state.byId[id];\n};\nexport var getVisibleProducts = function getVisibleProducts(state) {\n  return state.visibleIds.map(function (id) {\n    return getProduct(state, id);\n  });\n};","map":{"version":3,"sources":["/home/teknotrait/Desktop/Biswajit/Online-Shopping-Cart/src/reducers/products.js"],"names":["combineReducers","RECEIVE_PRODUCTS","ADD_TO_CART","products","state","action","type","inventory","byId","reduce","obj","product","id","productId","visibleIds","map","getProduct","getVisibleProducts"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,0BAA9C;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,WAAL;AACE,+BACKE,KADL;AAEEG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,GAAkB;AAF/B;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,IAAMI,IAAI,GAAG,SAAPA,IAAO,GAAwB;AAAA,MAAvBJ,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACE,+BACKG,KADL,EAEKC,MAAM,CAACF,QAAP,CAAgBM,MAAhB,CAAuB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1CD,QAAAA,GAAG,CAACC,OAAO,CAACC,EAAT,CAAH,GAAkBD,OAAlB;AACA,eAAOD,GAAP;AACD,OAHE,EAGA,EAHA,CAFL;;AAOF;AAAA,UACUG,SADV,GACwBR,MADxB,CACUQ,SADV;;AAEE,UAAIA,SAAJ,EAAe;AACb,iCACKT,KADL,sBAEGS,SAFH,EAEeV,QAAQ,CAACC,KAAK,CAACS,SAAD,CAAN,EAAmBR,MAAnB,CAFvB;AAID;;AACD,aAAOD,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,IAAMU,UAAU,GAAG,SAAbA,UAAa,GAAwB;AAAA,MAAvBV,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACE,aAAOI,MAAM,CAACF,QAAP,CAAgBY,GAAhB,CAAoB,UAAAJ,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAZ;AAAA,OAA3B,CAAP;;AACF;AACE,aAAOR,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeJ,eAAe,CAAC;AAC7BQ,EAAAA,IAAI,EAAJA,IAD6B;AAE7BM,EAAAA,UAAU,EAAVA;AAF6B,CAAD,CAA9B;AAKA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACZ,KAAD,EAAQQ,EAAR;AAAA,SACxBR,KAAK,CAACI,IAAN,CAAWI,EAAX,CADwB;AAAA,CAAnB;AAGP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAb,KAAK;AAAA,SACrCA,KAAK,CAACU,UAAN,CAAiBC,GAAjB,CAAqB,UAAAH,EAAE;AAAA,WAAII,UAAU,CAACZ,KAAD,EAAQQ,EAAR,CAAd;AAAA,GAAvB,CADqC;AAAA,CAAhC","sourcesContent":["import { combineReducers } from 'redux'\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) =>\n  state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n"]},"metadata":{},"sourceType":"module"}