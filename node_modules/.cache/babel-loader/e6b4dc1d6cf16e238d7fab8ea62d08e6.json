{"ast":null,"code":"import _objectSpread from \"/home/teknotrait/Desktop/Biswajit/Online-Shopping-Cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport cart, * as fromCart from './cart';\nimport products, * as fromProducts from './products';\nexport default combineReducers({\n  cart: cart,\n  products: products\n});\n\nvar getAddedIds = function getAddedIds(state) {\n  return fromCart.getAddedIds(state.cart);\n};\n\nvar getQuantity = function getQuantity(state, id) {\n  return fromCart.getQuantity(state.cart, id);\n};\n\nvar getProduct = function getProduct(state, id) {\n  return fromProducts.getProduct(state.products, id);\n};\n\nexport var getTotal = function getTotal(state) {\n  return getAddedIds(state).reduce(function (total, id) {\n    return total + getProduct(state, id).price * getQuantity(state, id);\n  }, 0).toFixed(2);\n};\nexport var getCartProducts = function getCartProducts(state) {\n  return getAddedIds(state).map(function (id) {\n    return _objectSpread({}, getProduct(state, id), {\n      quantity: getQuantity(state, id)\n    });\n  });\n};","map":{"version":3,"sources":["/home/teknotrait/Desktop/Biswajit/Online-Shopping-Cart/src/reducers/index.js"],"names":["combineReducers","cart","fromCart","products","fromProducts","getAddedIds","state","getQuantity","id","getProduct","getTotal","reduce","total","price","toFixed","getCartProducts","map","quantity"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,EAAa,KAAKC,QAAlB,MAAgC,QAAhC;AACA,OAAOC,QAAP,EAAiB,KAAKC,YAAtB,MAAwC,YAAxC;AAEA,eAAeJ,eAAe,CAAC;AAC7BC,EAAAA,IAAI,EAAJA,IAD6B;AAE7BE,EAAAA,QAAQ,EAARA;AAF6B,CAAD,CAA9B;;AAKA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAIJ,QAAQ,CAACG,WAAT,CAAqBC,KAAK,CAACL,IAA3B,CAAJ;AAAA,CAAzB;;AACA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACD,KAAD,EAAQE,EAAR;AAAA,SAAeN,QAAQ,CAACK,WAAT,CAAqBD,KAAK,CAACL,IAA3B,EAAiCO,EAAjC,CAAf;AAAA,CAApB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAQE,EAAR;AAAA,SAAeJ,YAAY,CAACK,UAAb,CAAwBH,KAAK,CAACH,QAA9B,EAAwCK,EAAxC,CAAf;AAAA,CAAnB;;AAEA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,KAAK;AAAA,SAC3BD,WAAW,CAACC,KAAD,CAAX,CACGK,MADH,CACU,UAACC,KAAD,EAAQJ,EAAR;AAAA,WACNI,KAAK,GAAGH,UAAU,CAACH,KAAD,EAAQE,EAAR,CAAV,CAAsBK,KAAtB,GAA8BN,WAAW,CAACD,KAAD,EAAQE,EAAR,CAD3C;AAAA,GADV,EAGI,CAHJ,EAKGM,OALH,CAKW,CALX,CAD2B;AAAA,CAAtB;AAQP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,KAAK;AAAA,SAClCD,WAAW,CAACC,KAAD,CAAX,CAAmBU,GAAnB,CAAuB,UAAAR,EAAE;AAAA,6BACpBC,UAAU,CAACH,KAAD,EAAQE,EAAR,CADU;AAEvBS,MAAAA,QAAQ,EAAEV,WAAW,CAACD,KAAD,EAAQE,EAAR;AAFE;AAAA,GAAzB,CADkC;AAAA,CAA7B","sourcesContent":["import { combineReducers } from 'redux'\nimport cart, * as fromCart from './cart'\nimport products, * as fromProducts from './products'\n\nexport default combineReducers({\n  cart,\n  products\n})\n\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n\nexport const getTotal = state =>\n  getAddedIds(state)\n    .reduce((total, id) =>\n      total + getProduct(state, id).price * getQuantity(state, id),\n      0\n    )\n    .toFixed(2)\n\nexport const getCartProducts = state =>\n  getAddedIds(state).map(id => ({\n    ...getProduct(state, id),\n    quantity: getQuantity(state, id)\n  }))\n"]},"metadata":{},"sourceType":"module"}